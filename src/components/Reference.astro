---
import Link from "@components/Link.astro";

type ReferenceItem = { title: string; url?: string; note?: string; year?: string };
type NoteItem = { title: string; body: string };

interface Props {
  references?: ReferenceItem[];
  notes?: NoteItem[];
}

const { references = [], notes = [] } = Astro.props as Props;
---

{(references.length > 0 || notes.length > 0) && (
  <div class="flex flex-col gap-6 mt-10">
    {references.length > 0 && (
      <section class="flex flex-col gap-3">
        <h3 class="text-lg font-semibold">References</h3>
        <ol class="flex flex-col gap-2">
          {references.map((r) => (
            <li class="text-sm text-gray-700 dark:text-gray-300">
              <span class="font-medium text-gray-500"> </span>
              {r.url ? (
                <span>
                  {r.title}{r.year && ` (${r.year})`}. Available at: <Link href={r.url} target="_blank">{r.url}</Link>.    
                  {r.note && <span class="text-gray-500 dark:text-gray-400"> [{r.note}]</span>}
                </span>
              ) : (
                <span>
                  {r.title}{r.year && ` (${r.year})`}.
                  {r.note && <span class="text-gray-500 dark:text-gray-400"> [{r.note}]</span>}
                </span>
              )}
            </li>
          ))}
        </ol>
      </section>
    )}
    {notes.length > 0 && (
      <section class="flex flex-col gap-3">
        <h3 class="text-lg font-semibold">Notes</h3>
        <div class="flex flex-col gap-4">
          {notes.map((note) => (
            <div class="bg-gray-50 dark:bg-gray-800 rounded-lg p-4">
              <h4 class="font-semibold text-gray-900 dark:text-gray-100 mb-2">{note.title}</h4>
              <p class="text-sm text-gray-700 dark:text-gray-300">{note.body}</p>
            </div>
          ))}
        </div>
      </section>
    )}
  </div>
)}
